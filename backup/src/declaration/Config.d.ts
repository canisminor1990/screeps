interface rclNumber {
	1: number;
	2: number;
	3: number;
	4: number;
	5: number;
	6: number;
	7: number;
	8: number;
}

interface baseMineralNumber {
	H: number;
	O: number;
	U: number;
	L: number;
	K: number;
	Z: number;
	X: number;
}

declare const _ME: string;
declare const ME: string;
declare const CHATTY: boolean;
declare const HONK: boolean;
declare const OOPS: boolean;
declare const SAY_ASSIGNMENT: boolean;
declare const SAY_PUBLIC: boolean;
declare const DEBUG: boolean;
declare const DEBUG_STACKS: boolean;
declare const TRACE: boolean;
declare const PROFILE: boolean;
declare const PROFILING: {
	ANALYZE_LIMIT: number;
	AVERAGE_USAGE: boolean;
	BASIC_ONLY: boolean;
	BEHAVIOUR: boolean;
	CREEPS: boolean;
	CREEP_TYPE: string;
	EXECUTE_LIMIT: number;
	FLAGS: boolean;
	FLUSH_LIMIT: number;
	MAIN: boolean;
	MIN_THRESHOLD: number;
	REGISTER_LIMIT: number;
	ROOMS: boolean;
	VISUALS: boolean;
	VISUALS_LIMIT: number;
};
declare const TRAVELER_STUCK_TICKS: number;
declare const TRAVELER_THRESHOLD: number;
declare const USE_UNBUILT_ROADS: boolean;
declare const GRAFANA: boolean;
declare const GRAFANA_INTERVAL: number;
declare const CENSUS_ANNOUNCEMENTS: boolean;
declare const SELL_NOTIFICATION: boolean;
declare const SPAWN_INTERVAL: number;
declare const ROOM_VISUALS: boolean;
declare const ROOM_VISUALS_ALL: boolean;
declare const VISUALS: {
	VISIBLE_ONLY: boolean;
	ROOM: boolean;
	ROOM_GLOBAL: boolean;
	INFO_PIE_CHART: boolean;
	CPU: boolean;
	ROOM_ORDERS: boolean;
	ROOM_OFFERS: boolean;
	SPAWN: boolean;
	CONTROLLER: boolean;
	STORAGE: boolean;
	TERMINAL: boolean;
	TOWER: boolean;
	TRANSACTIONS: boolean;
	LABS: boolean;
	MINERAL: boolean;
	SOURCE: boolean;
	CREEP: boolean;
	WALL: boolean;
	RAMPART: boolean;
	ROAD: boolean;
	HEATMAP: boolean;
	HEATMAP_INTERVAL: number;
	ACTION_ASSIGNMENT: boolean;
};
declare const SEMI_AUTOMATIC_CONSTRUCTION: boolean;
declare const REMOVE_CONSTRUCTION_FLAG: boolean;
declare const MAX_STORAGE_ENERGY: rclNumber;
declare const MIN_STORAGE_ENERGY: rclNumber;
declare const MAX_STORAGE_MINERAL: number;
declare const ROOM_TRADING: boolean;
declare const FILL_POWERSPAWN: boolean;
declare const MIN_MINERAL_SELL_AMOUNT: number;
declare const ENERGY_VALUE_CREDITS: number;
declare const TERMINAL_ENERGY: number;
declare const ENERGY_BALANCE_TRANSFER_AMOUNT: number;
declare const TARGET_STORAGE_SUM_RATIO: number;
declare const AUTOMATED_RATIO_COUNT: boolean;
declare const MIN_SELL_RATIO: baseMineralNumber;
declare const MAX_BUY_RATIO: baseMineralNumber;
declare const MAX_REPAIR_LIMIT: rclNumber;
declare const MIN_FORTIFY_LIMIT: rclNumber;
declare const MAX_FORTIFY_LIMIT: rclNumber;
declare const MAX_FORTIFY_CONTAINER: number;
declare const LIMIT_URGENT_REPAIRING: number;
declare const GAP_REPAIR_DECAYABLE: number;
declare const MEMORY_RESYNC_INTERVAL: number;
declare const PROCESS_ORDERS_INTERVAL: number;
declare const TIME_REPORT: number;
declare const REPORT_MAX_LENGTH: number;
declare const REPORTS_PER_LOOP: number;
declare const SEND_STATISTIC_REPORTS: boolean;
declare const ROAD_CONSTRUCTION_FORCED_ROOMS: { [type: string]: any[] };
declare const ROAD_CONSTRUCTION_ENABLE: boolean;
declare const ROAD_CONSTRUCTION_INTERVAL: number;
declare const ROAD_CONSTRUCTION_MIN_DEVIATION: number;
declare const ROAD_CONSTRUCTION_ABS_MIN: number;
declare const TIME_ZONE: number;
declare const USE_SUMMERTIME: boolean;
declare const SPAWN_DEFENSE_ON_ATTACK: boolean;
declare const MANAGED_CONTAINER_TRIGGER: number;
declare const ROUTE_ROOM_COST: { [type: string]: any[] };
declare const TRAVELLING_BORDER_RANGE: number;
declare const NOTIFICATE_INVADER: boolean;
declare const NOTIFICATE_INTRUDER: boolean;
declare const NOTIFICATE_HOSTILES: boolean;
declare const COMBAT_CREEPS_RESPECT_RAMPARTS: boolean;
declare const COST_MATRIX_VALIDITY: number;
declare const CONSTRUCTION_PRIORITY: any[];
declare const CONTROLLER_SIGN: boolean;
declare const CONTROLLER_SIGN_MESSAGE: string;
declare const CONTROLLER_SIGN_UPDATE: boolean;
declare const MINERS_AUTO_BUILD: boolean;
declare const MINER_WORK_THRESHOLD: number;
declare const REMOTE_HAULER: {
	ALLOW_OVER_CAPACITY: number;
	DRIVE_BY_BUILD_ALL: boolean;
	DRIVE_BY_BUILD_RANGE: number;
	DRIVE_BY_BUILDING: boolean;
	DRIVE_BY_REPAIR_RANGE: number;
	MIN_LOAD: number;
	MIN_WEIGHT: number;
	MULTIPLIER: number;
	REHOME: boolean;
};
declare const TASK_CREEP_CHECK_INTERVAL: number;
declare const REMOTE_RESERVE_HAUL_CAPACITY: number;
declare const PIONEER_UNOWNED: boolean;
declare const DRIVE_BY_REPAIR_RANGE: number;
declare const REMOTE_WORKER_MULTIPLIER: number;
declare const PLAYER_WHITELIST: string[];
declare const DEFENSE_BLACKLIST: string[];
declare const CRITICAL_BUCKET_LEVEL: number;
declare const CRITICAL_BUCKET_OVERFILL: number;
declare const CRITICAL_ROLES: string[];
declare const ROBBER_REHOME: boolean;
declare const OBSERVER_OBSERVE_RANGE: number;
declare const OBSERVER_OBSERVE_HIGHWAYS_ONLY: boolean;
declare const COMPRESS_COST_MATRICES: boolean;
declare const ACTION_SAY: {
	ATTACK_CONTROLLER: string;
	AVOIDING: string;
	BOOSTING: string;
	BUILDING: string;
	BULLDOZING: string;
	CHARGING: string;
	CLAIMING: string;
	DEFENDING: string;
	DISMANTLING: string;
	DROPPING: string;
	FEEDING: string;
	FORTIFYING: string;
	FUELING: string;
	GUARDING: string;
	HARVESTING: string;
	HEALING: string;
	IDLE: string;
	INVADING: string;
	MINING: string;
	PICKING: string;
	REALLOCATING: string;
	RECYCLING: string;
	REPAIRING: string;
	RESERVING: string;
	ROBBING: string;
	STORING: string;
	TRAVELLING: string;
	UNCHARGING: string;
	UPGRADING: string;
	WITHDRAWING: string;
	SAFEGEN: string;
};
declare const MAKE_COMPOUNDS: boolean;
declare const MAKE_COMPOUNDS_INTERVAL: number;
declare const MAKE_REACTIONS_WITH_3LABS: boolean;
declare const CHECK_ORDERS_INTERVAL: number;
declare const PURCHASE_MINERALS: boolean;
declare const STORE_CHARGE_PURCHASE: number;
declare const COMPOUNDS_TO_MAKE: {
	[type: string]: {
		make: boolean;
		threshold: number;
		amount: number;
		rooms: string[];
	};
};
declare const TRADE_THRESHOLD: number;
declare const MIN_OFFER_AMOUNT: number;
declare const MIN_COMPOUND_AMOUNT_TO_MAKE: number;
declare const ALLOCATE_COMPOUNDS: boolean;
declare const ALLOCATE_COMPOUNDS_INTERVAL: number;
declare const COMPOUNDS_TO_ALLOCATE: {
	[type: string]: {
		allocate: boolean;
		allocateRooms: string[];
		threshold: number;
		amount: number;
		storeTo: string;
		labRefilledAt: 500;
	};
};
